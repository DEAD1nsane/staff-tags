(function(u,a,i,S,r,_,g,c){"use strict";const{ScrollView:m}=g.General,{FormSection:M,FormSwitchRow:B}=g.Forms;function N(){return _.useProxy(r.storage),React.createElement(m,{style:{flex:1}},React.createElement(M,{title:"Tag style"},React.createElement(B,{label:"Use top role color",subLabel:"This may result in unreadable tags as it isn't possible to change the tag's text color.",value:r.storage.useRoleColor,onValueChange:function(t){r.storage.useRoleColor=t}})))}const T=a.findByName("RowManager"),C=a.findByStoreName("GuildStore"),G=a.findByStoreName("ChannelStore"),{Permissions:O}=i.constants,{computePermissions:h}=a.findByProps("computePermissions","canEveryoneRole"),{Messages:l}=a.findByProps("Messages");let f;const x=[l.AI_TAG,l.BOT_TAG_SERVER,l.SYSTEM_DM_TAG_SYSTEM,l.GUILD_AUTOMOD_USER_BADGE_TEXT],p=[{text:"WEBHOOK",condition:function(t,n,e){return e.isNonUserBot()}},{text:"OWNER",color:c.rawColors.ORANGE_345,condition:function(t,n,e){return t?.ownerId===e.id||n.type===3&&n.ownerId===e.id}},{text:l.BOT_TAG_BOT,condition:function(t,n,e){return e.bot}},{text:"ADMIN",color:c.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",color:c.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",color:c.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];var v={onLoad:function(){r.storage.useRoleColor??=!1,f=S.after("generate",T.prototype,function(t,n){let[e]=t,{message:s}=n;if(e.rowType===1){if(!x.includes(s.tagText)){const{guildId:w,channelId:y}=s,d=C.getGuild(w),A=G.getChannel(y);let R;if(d){const o=h({user:e.message.author,context:d,overwrites:A.permissionOverwrites});R=Object.entries(O).map(function(E){let[I,b]=E;return o&b?I:""}).filter(Boolean)}for(const o of p)if(o.condition?.(d,A,e.message.author)||o.permissions?.some(function(E){return R?.includes(E)})){s.tagText=o.text,o.color&&!(r.storage.useRoleColor&&e.message.colorString)&&(s.tagBackgroundColor=i.ReactNative.processColor(i.chroma(o.color).hex()));break}}r.storage.useRoleColor&&e.message.colorString&&s.tagText&&(s.tagBackgroundColor=i.ReactNative.processColor(i.chroma(e.message.colorString).hex()))}})},onUnload:function(){return f()},settings:N};return u.default=v,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.plugin,vendetta.storage,vendetta.ui.components,vendetta.ui);
