(function(u,s,a,S,r,_,g,c){"use strict";const{ScrollView:m}=g.General,{FormSection:M,FormSwitchRow:B}=g.Forms;function N(){return _.useProxy(r.storage),React.createElement(m,{style:{flex:1}},React.createElement(M,{title:"Tag style"},React.createElement(B,{label:"Use top role color",subLabel:"This may result in unreadable tags as it isn't possible to change the tag's text color.",value:r.storage.useRoleColor,onValueChange:function(t){r.storage.useRoleColor=t}})))}const C=s.findByName("RowManager"),G=s.findByStoreName("GuildStore"),T=s.findByStoreName("ChannelStore"),{Permissions:O}=a.constants,{computePermissions:h}=s.findByProps("computePermissions","canEveryoneRole"),{Messages:i}=s.findByProps("Messages");let f;const p=[i.AI_TAG,i.BOT_TAG_SERVER,i.SYSTEM_DM_TAG_SYSTEM,i.GUILD_AUTOMOD_USER_BADGE_TEXT],v=[{text:"WEBHOOK",condition:function(t,n,e){return e.isNonUserBot()}},{text:"OWNER",color:c.rawColors.ORANGE_345,condition:function(t,n,e){return t?.ownerId===e.id||n.type===3&&n.ownerId===e.id}},{text:i.BOT_TAG_BOT,condition:function(t,n,e){return e.bot}},{text:"ADMIN",color:c.rawColors.RED_560,permissions:["ADMINISTRATOR"]},{text:"MANAGER",color:c.rawColors.GREEN_345,permissions:["MANAGE_GUILD","MANAGE_CHANNELS","MANAGE_ROLES","MANAGE_WEBHOOKS"]},{text:"MOD",color:c.rawColors.BLUE_345,permissions:["MANAGE_MESSAGES","KICK_MEMBERS","BAN_MEMBERS"]}];var x={onLoad:function(){r.storage.useRoleColor??=!1,f=S.after("generate",C.prototype,function(t,n){let[e]=t,{message:l}=n;if(e.rowType===1){if(!p.includes(l.tagText)){const{guildId:w,channelId:y}=l,d=G.getGuild(w),A=T.getChannel(y);let R;if(d){const o=h({user:e.message.author,context:d,overwrites:A.permissionOverwrites});R=Object.entries(O).map(function(E){let[I,b]=E;return o&b?I:""}).filter(Boolean)}for(const o of v)if(o.condition?.(d,A,e.message.author)||o.permissions?.some(function(E){return R?.includes(E)})){l.tagText=o.text,o.color&&!(r.storage.useRoleColor&&e.message.colorString)&&(l.tagBackgroundColor=a.ReactNative.processColor(a.chroma(o.color).hex()));break}}r.storage.useRoleColor&&e.message.colorString&&(l.tagBackgroundColor=a.ReactNative.processColor(a.chroma(e.message.colorString).hex()))}})},onUnload:function(){return f()},settings:N};return u.default=x,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.plugin,vendetta.storage,vendetta.ui.components,vendetta.ui);
